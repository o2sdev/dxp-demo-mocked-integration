name: Development Deployment
permissions:
    actions: write
    contents: write
    packages: write
    checks: read
    pull-requests: write
    deployments: write

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    TURBO_TEAM: ${{ vars.TURBO_TEAM }}
on:
    push:
        branches:
            - main
jobs:
    pre_job:
        runs-on: ubuntu-latest
        outputs:
            should_skip: ${{ steps.skip_check.outputs.should_skip }}
        steps:
            - id: skip_check
              uses: fkirc/skip-duplicate-actions@v5
              with:
                  # All of these options are optional, so you can remove them if you are happy with the defaults
                  concurrent_skipping: 'outdated_runs'
#                  paths_ignore: '["**/README.md", ".github/**"]'
                  cancel_others: 'true'

    changed-packages:
        name: Determine which apps changed
        needs: [pre_job]
        if: needs.pre_job.outputs.should_skip != 'true'
        uses: ./.github/workflows/changed-packages.yaml
    Deploy-Development:
        runs-on: ubuntu-latest
        needs: [pre_job, changed-packages]
        if: needs.pre_job.outputs.should_skip != 'true'
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 2

            - name: Prepare Environment
              uses: ./.github/actions/setup-env
              timeout-minutes: 10
              with:
                  repo-token: ${{ secrets.GITHUB_TOKEN }}

            - name: Deploy API_HARMONIZATION Project Artifacts to Vercel
              if: contains(toJson(fromJson(needs.changed-packages.outputs.package_changed).packages), 'api-harmonization') && always()
              env:
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_API_HARMONIZATION_PROJECT_ID }}
              uses: ./.github/actions/build
              timeout-minutes: 10
              with:
                  vercel-token: ${{ secrets.VERCEL_ACCESS_TOKEN }}
                  pull-env-args: '--environment=preview'
                  build-env-args: ''

            - name: Deploy FRONTEND Project Artifacts to Vercel
              if: contains(toJson(fromJson(needs.changed-packages.outputs.package_changed).packages), 'frontend') && always()
              env:
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}
              uses: ./.github/actions/build
              timeout-minutes: 10
              with:
                  vercel-token: ${{ secrets.VERCEL_ACCESS_TOKEN }}
                  pull-env-args: '--environment=preview'
                  build-env-args: ''
